version: "3.8"

networks:
  corp:
    driver: bridge

services:
  database:
    hostname: coco-api-db
    container_name: coco-api-db
    image: mongo
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
      # Create a new database. Please note, the
      # /docker-entrypoint-initdb.d/init.js has to be executed
      # in order for the database to be created
      MONGO_INITDB_DATABASE: coco
    volumes:
      # Add the db-init.js file to the Mongo DB container
      - ./db-initial.js:/docker-entrypoint-initdb.d/init.js:ro
    ports:
      - '27017-27019:27017-27019'
    networks:
      - corp
  mongo-express:
    container_name: coco-api-mongo-express
    image: mongo-express
    restart: always
    ports:
      - 8081:8081
    networks:
      - corp
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: example
      ME_CONFIG_MONGODB_SERVER: database
    depends_on:
      - database
  coco-api:
    hostname: coco-api
    container_name: coco-api
    build:
      context: .
      dockerfile: apps/coco/Dockerfile.dev
      args:
        PORT: 3333
        NODE_ENV: development
    volumes:
      - ./apps/coco:/app/apps/coco
      # - ./node_modules:/app/node_modules
    ports:
      - "3333:3333"
    networks:
      - corp
    depends_on:
      - database
    environment:
      PORT: 3333
      MONGO_USERNAME: user
      MONGO_PASSWORD: secretPassword
      MONGO_HOST: coco-api-db
      MONGO_PORT: 27017
      MONGO_NAME: coco
  coco-fe:
    container_name: coco-fe
    build:
      context: .
      dockerfile: apps/coco-fe/Dockerfile.dev
      args:
        NODE_ENV: development
    volumes:
      - ./apps/coco-fe:/app/apps/coco-fe
      # - ./node_modules:/app/node_modules
    ports:
      - "4200:4200"
    networks:
      - corp
    depends_on:
      - coco-api
    environment:
      VERSION: 1.0.0
